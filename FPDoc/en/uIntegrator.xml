<?xml version="1.0" encoding="UTF-8"?>
<fpdoc-descriptions>
  <package name="Laz-Model">
    <module name="uIntegrator">
      <descr/>
      <element name="TExportIntegrator">
        <short>Baseclass for an integrator where the model is used to generate 'something'.</short>
        <descr/>
        <seealso>
          <link id="uIntegrator.TIntegrator">TIntegrator {Parent of}</link>
        </seealso>
      </element>
      <element name="TExportIntegrator.InitFromModel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator">
        <short>Baseclass for an integrator where 'something' (probably some sourcecode) is used to generate a model.</short>
        <descr/>
        <seealso>
          <link id="uIntegrator.TIntegrator">TIntegrator {Parent of}</link>
        </seealso>
      </element>
      <element name="TImportIntegrator.CodeProvider">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator.FilesRead">
        <short>List of files that have been read in this import session</short>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator.Create">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator.Destroy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator.GetFileExtensions">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TImportIntegrator.ImportOneFile">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrator">
        <short>Baseclass for integrators </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrator.FModel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrator.Model">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrator.Create">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrator.Destroy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators.List">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators.Create">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators.Destroy">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators.Get">
        <short>Retrieves a list of available integrators of a given kind </short>
        <descr/>
        <seealso/>
      </element>
      <element name="TIntegrators.Register">
        <short>Register an Integrator implementing class with the global set of Integrators.</short>
        <descr>
          <p>Should be called by all integrator implementations to register it with
     the masterlist of integrators.
     eg. </p>
          <p>
            <code>Integrators.Register( TEiffelIntegrator ); </code>
          </p>
        </descr>
        <seealso/>
      </element>
      <element name="TTwowayIntegrator">
        <short>Baseclass for an integrator where the model can be changed from the source and changes in the model can change the source.</short>
        <descr/>
        <seealso>
          <link id="uIntegrator.TIntegrator">TIntegrator {Parent of}</link>
        </seealso>
      </element>
      <element name="TTwowayIntegrator.BuildModelFrom">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="TTwowayIntegrator.InitFromModel">
        <short/>
        <descr/>
        <seealso/>
      </element>
      <element name="Integrators">
        <short>Used to retrieve _the_ instance of TIntegrators.</short>
      </element>
    </module>
  </package>
</fpdoc-descriptions>
